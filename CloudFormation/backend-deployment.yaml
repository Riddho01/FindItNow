AWSTemplateFormatVersion: '2010-09-09'
Description: 'FindItNow Application Infrastructure'

Resources:
  # S3 Bucket
  FoundItemsBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: 'found-items'
      VersioningConfiguration:
        Status: Suspended
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter

  FoundItemsBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    DependsOn: FoundItemsBucket
    Properties:
      Bucket: !Ref FoundItemsBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Sub 'arn:aws:s3:::${FoundItemsBucket}/*'

  # Lambda Functions
  DeleteItemFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: 'delete-item'
      Runtime: nodejs20.x
      Handler: 'index.handler'
      Role: 'arn:aws:iam::907365306470:role/LabRole'
      Code:
        S3Bucket: 'finditnow-code'
        S3Key: 'delete-item.zip'
      Timeout: 29

  VerifyAccessCodeFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: 'verify-accesscode'
      Runtime: nodejs20.x
      Handler: 'index.handler'
      Role: 'arn:aws:iam::907365306470:role/LabRole'
      Code:
        S3Bucket: 'finditnow-code'
        S3Key: 'verify-accesscode.zip'
      Timeout: 29

  UpdateAccessCodeStatusFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: 'update-accesscodestatus'
      Runtime: nodejs20.x
      Handler: 'index.handler'
      Role: 'arn:aws:iam::907365306470:role/LabRole'
      Code:
        S3Bucket: 'finditnow-code'
        S3Key: 'update-accesscodestatus.zip'
      Timeout: 29

  FoundItemsFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: 'found-item'
      Runtime: nodejs20.x
      Handler: 'index.handler'
      Role: 'arn:aws:iam::907365306470:role/LabRole'
      Code:
        S3Bucket: 'finditnow-code'
        S3Key: 'found-item.zip'
      Timeout: 29

  SearchItemsFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: 'search-item'
      Runtime: python3.10
      Handler: 'lambda_function.lambda_handler'
      Role: 'arn:aws:iam::907365306470:role/LabRole'
      Code:
        S3Bucket: 'finditnow-code'
        S3Key: 'search-item.zip'
      Timeout: 29
      Layers: 
        - 'arn:aws:lambda:us-east-1:770693421928:layer:Klayers-p310-Pillow:7'
  
  # API Gateway
  FindItNowAPI:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Name: 'FindItNowAPI'
      BinaryMediaTypes: 
        - 'image/*'

  BucketFileResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId: !Ref FindItNowAPI
      ParentId: !GetAtt FindItNowAPI.RootResourceId
      PathPart: '{bucket}'

  FileResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId: !Ref FindItNowAPI
      ParentId: !Ref BucketFileResource
      PathPart: '{filename}'

  BucketFileOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      RestApiId: !Ref FindItNowAPI
      ResourceId: !Ref FileResource
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,PUT,GET,POST,DELETE'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            ResponseTemplates:
              application/json: ''
        PassthroughBehavior: WHEN_NO_MATCH
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        Type: MOCK
      MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: 'Empty'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true

  BucketFileMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      RestApiId: !Ref FindItNowAPI
      ResourceId: !Ref FileResource
      HttpMethod: PUT
      AuthorizationType: NONE
      Integration:
        Type: AWS
        IntegrationHttpMethod: PUT
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:s3:path/{bucket}/{filename}'
        Credentials: 'arn:aws:iam::907365306470:role/LabRole'
        RequestParameters:
          integration.request.path.bucket: 'method.request.path.bucket'
          integration.request.path.filename: 'method.request.path.filename'
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
      RequestParameters:
        method.request.path.bucket: true
        method.request.path.filename: true
      MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: "Empty"
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Headers: true

  DeleteItemResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId: !Ref FindItNowAPI
      ParentId: !GetAtt FindItNowAPI.RootResourceId
      PathPart: 'delete-item'

  DeleteItemOptionsMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      RestApiId: !Ref FindItNowAPI
      ResourceId: !Ref DeleteItemResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      Integration:
        Type: MOCK
        RequestTemplates:
          application/json: '{ "statusCode": 200 }'
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,POST'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            ResponseTemplates:
              application/json: ''
      MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: 'Empty'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true

  DeleteItemMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      RestApiId: !Ref FindItNowAPI
      ResourceId: !Ref DeleteItemResource
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DeleteItemFunction.Arn}/invocations'
        IntegrationResponses:
          - StatusCode: 200
            ResponseTemplates:
              application/json: ''
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
      MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: "Empty"
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Headers: true

  FoundItemsResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId: !Ref FindItNowAPI
      ParentId: !GetAtt FindItNowAPI.RootResourceId
      PathPart: 'found-items'

  FoundItemsOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      RestApiId: !Ref FindItNowAPI
      ResourceId: !Ref FoundItemsResource
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            ResponseTemplates:
              application/json: ''
        PassthroughBehavior: WHEN_NO_MATCH
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        Type: MOCK
      MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: "Empty"
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true

  FoundItemsMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      RestApiId: !Ref FindItNowAPI
      ResourceId: !Ref FoundItemsResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FoundItemsFunction.Arn}/invocations'
        IntegrationResponses:
          - StatusCode: 200
            ResponseTemplates:
              application/json: ''
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
      MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: "Empty"
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Headers: true

  SearchItemResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId: !Ref FindItNowAPI
      ParentId: !GetAtt FindItNowAPI.RootResourceId
      PathPart: 'search-item'

  SearchItemOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      RestApiId: !Ref FindItNowAPI
      ResourceId: !Ref SearchItemResource
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,POST'"
              method.response.header.Access-Control-Allow-Origin: "'http://localhost:5173'"
            ResponseTemplates:
              application/json: ''
        PassthroughBehavior: WHEN_NO_MATCH
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        Type: MOCK
      MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: 'Empty'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true

  SearchItemMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      RestApiId: !Ref FindItNowAPI
      ResourceId: !Ref SearchItemResource
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SearchItemsFunction.Arn}/invocations'
      MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: "Empty"
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true

  UserAdminResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId: !Ref FindItNowAPI
      ParentId: !GetAtt FindItNowAPI.RootResourceId
      PathPart: 'user'

  UserAdminOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      RestApiId: !Ref FindItNowAPI
      ResourceId: !Ref UserAdminResource
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,POST'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            ResponseTemplates:
              application/json: ''
        PassthroughBehavior: WHEN_NO_MATCH
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        Type: MOCK
      MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: 'Empty'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true

  AdminResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId: !Ref FindItNowAPI
      ParentId: !Ref UserAdminResource
      PathPart: 'admin'

  VerificationCodeResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId: !Ref FindItNowAPI
      ParentId: !Ref AdminResource
      PathPart: 'verification-code'

  VerificationCodeOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      RestApiId: !Ref FindItNowAPI
      ResourceId: !Ref VerificationCodeResource
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,POST,PUT'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            ResponseTemplates:
              application/json: ''
        PassthroughBehavior: WHEN_NO_MATCH
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        Type: MOCK
      MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: 'Empty'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true

  VerificationCodePostMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      RestApiId: !Ref FindItNowAPI
      ResourceId: !Ref VerificationCodeResource
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${VerifyAccessCodeFunction.Arn}/invocations'
        IntegrationResponses:
          - StatusCode: 200
            ResponseTemplates:
              application/json: ''
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
      MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: "Empty"
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Headers: true

  VerificationCodePutMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      RestApiId: !Ref FindItNowAPI
      ResourceId: !Ref VerificationCodeResource
      HttpMethod: PUT
      AuthorizationType: NONE
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UpdateAccessCodeStatusFunction.Arn}/invocations'
        IntegrationResponses:
          - StatusCode: 200
            ResponseTemplates:
              application/json: ''
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
      MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: "Empty"
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Headers: true

  ApiDeployment:
    Type: 'AWS::ApiGateway::Deployment'
    DependsOn:
      - BucketFileMethod
      - DeleteItemMethod
      - FoundItemsMethod
      - SearchItemMethod
      - VerificationCodePostMethod
      - VerificationCodePutMethod
      - BucketFileOptionsMethod
      - DeleteItemOptionsMethod
      - FoundItemsOptionsMethod
      - SearchItemOptionsMethod
      - VerificationCodeOptionsMethod
      - UserAdminOptionsMethod
    Properties:
      RestApiId: !Ref FindItNowAPI
      StageName: 'prod'

#DynamoDB Table
  FindItNowAccessCodesTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: 'FindItNow-AccCodes'
      AttributeDefinitions:
        - AttributeName: 'code'
          AttributeType: 'S'
      KeySchema:
        - AttributeName: 'code'
          KeyType: 'HASH'
      BillingMode: 'PAY_PER_REQUEST'

  # Cognito User Pool
  FindItNowUserPool:
    Type: 'AWS::Cognito::UserPool'
    Properties:
      UserPoolName: 'FindItNowAdmins'
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      AutoVerifiedAttributes:
        - email
      Schema:
        - Name: family_name
          AttributeDataType: String
          Mutable: true
          Required: true
        - Name: given_name
          AttributeDataType: String
          Mutable: true
          Required: true
        - Name: organization
          AttributeDataType: String
          Mutable: true
          Required: false 
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true

  FindItNowUserPoolClient:
    Type: 'AWS::Cognito::UserPoolClient'
    Properties:
      ClientName: 'FindItNow-React'
      UserPoolId: !Ref FindItNowUserPool
      GenerateSecret: false
      ExplicitAuthFlows:
        - ALLOW_USER_SRP_AUTH
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH